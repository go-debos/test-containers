name: Build and publish Docker images
on:
 workflow_dispatch:
 push:
  branches-ignore:
   - '*.tmp'
 pull_request:
 schedule:
  # New image every monday morning
  - cron: '42 0 * * 1'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-containers:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.variant }} container
    env:
      TEST_TAG: ${{ github.repository }}-${{ matrix.variant }}-testbuild
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        variant:
          - arch
          - bullseye
          - bookworm
        include:
          - variant: arch
            dockerfile: arch
          - variant: bullseye
            dockerfile: debian
          - variant: bookworm
            dockerfile: debian
          - variant: trixie
            dockerfile: debian
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.variant }}
          tags: |
            "type=ref,event=branch"
            "type=ref,suffix=-{{sha}},event=branch"
            "type=ref,suffix=-{{date 'YYYYMMDD'}},event=branch"
            "type=ref,event=tag"
            "type=ref,event=pr"

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.${{ matrix.dockerfile }}
          load: true
          push: false
          tags: ${{ env.TEST_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VARIANT=${{ matrix.variant }}

      # TODO: actually do something useful here
      # git clone latest version && go test -v ./...
      - name: Checkout fakemachine (for unit tests)
        uses: actions/checkout@v4
        with:
          repository: 'go-debos/fakemachine'
          path: src/fakemachine

      - name: Run fakemachine unit tests in Docker image
        run: |
          docker run --rm \
                     --workdir /mnt \
                     --mount "type=bind,source=$(pwd),destination=/mnt" \
                     ${{ env.TEST_TAG }} \
                     bash -c "ls -la && cd src/fakemachine && go test -v ./... --backend=qemu"

      - name: Checkout debos (for unit tests)
        uses: actions/checkout@v4
        with:
          repository: 'go-debos/debos'
          path: src/debos

      - name: Run debos unit tests in Docker image
        run: |
          docker run --rm \
                     --workdir /mnt \
                     --mount "type=bind,source=$(pwd),destination=/mnt" \
                     ${{ env.TEST_TAG }} \
                     bash -c "ls -la && cd src/debos && go test -v ./... --fakemachine-backend=qemu"

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VARIANT=${{ matrix.variant }}

  # Keep workflow alive
  # See https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#disabling-and-enabling-workflows
  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1.2.1

  # Job to key success status against
  allgreen:
    name: allgreen
    if: always()
    needs:
      - build-containers
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
